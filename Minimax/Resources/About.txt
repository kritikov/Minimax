Το πρόβλημα που λύνει η εφαρμογή είναι το εξ‘ής: σε ένα τραπέζι υπάρχουν M κύβοι και παίζουν δύο παίκτες. Κάθε παίκτης μπορεί να τραβήξει από το τραπέζι 1, 2 ή K κύβους. 
Νικητής είναι όποιος πάρει τους τελευταίους κύβους από το τραπέζι.
Η εφαρμογή προσπαθεί να λύσει το πρόβλημα χρησιμοποιώντας τον αλγόριθμο MinMax και κάνοντας αναζήτηση στο δέντρο καταστάσεων για να βρει την επόμενη κίνηση. 
Υπάρχει η επιλογή να αναζητήσει την καλύτερη κίνηση σε ολόκληρο το δέντρο, κάτι πολύ χρονοβόρο, ή να ψάξει μέχρι ένα βάθος, το οποίο ορίζεται από τον χρήστη.
Για να αξιολογηθεί ένας τελικός κόμβος, στην πλήρη αναζήτηση παίρνει 2 πόντους αν κερδίζει. 
Στην αναζήτηση με συγκεκριμένο βάθος, αν ο κόμβος που βρίσκεται στο καθοριζόμενο βάθος είναι τελικός τότε παίρνει επίσης 2 πόντους. Αν δεν είναι τελικός
και υπάρχει κίνηση που να αφήνει υπόλοιπο 3 κύβους στο τραπέζι τότε παίρνει 1 πόντο γιατί έτσι θα κερδίσει σίγουρα στον μεθεπόμενο γύρο. Στις υπόλοιπες περιπτώσεις παίρνει 0.
Για την αξιολόγηση των κόμβων, εκτός από το αν κερδίζει ή χάνει, ο αλγόριθμος λαμβάνει υπόψιν του και το πόσες κινήσεις χρειάζεται μέχρι αυτόν. Με αυτόν τον τρόπο, 
επιλέγει πάντα την πιο σύντομη διαδρομή για να κερδίσει ενώ, αν πρόκειται να χάσει, επιλέγει την πιο μακρινή.
Συνολικά, για την αξιολόγηση του τελικού κόμβου χρησιμοποιείται ένας factor αρκετά μεγάλος (ορίζεται ως 2 * Μ) από τον οποίο αφαιρείται το μήκος της διαδρομής μέχρι αυτόν και 
η βαθμολογία του κόμβου.
Η εφαρμογή περιέχει δύο ειδών παιχνίδια, ένα του υπολογιστή εναντίων του ανθρώπου (AI vs player) και ένα μεταξύ υπολογιστή και υπολογιστή (AI vs AI). Έχει επίσης και την 
δυνατότητα κατασκευής του δέντρου καταστάσεων για τον έλεγχο του αλγόριθμου MinMax.